/******/ (() => { // webpackBootstrap
/*!******************************!*\
  !*** ./assets/js/backend.js ***!
  \******************************/
document.addEventListener('DOMContentLoaded', function () {
  document.querySelectorAll('.prompt-button button').forEach(function (item) {
    item.addEventListener('click', function () {
      fetch(item.dataset.prefix + '/_loki/prompt/' + item.dataset.id + '/' + item.dataset.field + '/' + item.dataset.objectId).then(function (r) {
        return r.json();
      }).then(function (r) {
        if (r.result) {
          var input = item.closest('.widget').querySelector('input[id]');
          var textarea = item.closest('.widget').querySelector('textarea[id]');
          var select = item.closest('.widget').querySelector('select[id]');
          if (input) {
            input.value = r.result;
          } else if (textarea) {
            textarea.innerText = r.result;
            if (tinymce && tinymce.get(textarea.id)) {
              tinymce.get(textarea.id).setContent(r.result);
            }
          } else if (select) {
            select.querySelectorAll('option[selected]').forEach(function (item) {
              item.selected = false;
            });
            var option = select.querySelector('option[value="' + r.result + '"]');
            if (option) {
              option.selected = true;
            }
            if (select.classList.contains('tl_chosen')) {
              select.dispatchEvent(new Event('input', {
                bubbles: true
              }));
              var chosenContainer = select.parentElement.querySelector('.chzn-container');
              if (chosenContainer) {
                chosenContainer.remove(); // Remove Chosen's UI
                new Chosen(select);
              }
            }
          }
        }
      });
    });
  });
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YnBhY2s6Ly8vLi9hc3NldHMvanMvYmFja2VuZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcm9tcHQtYnV0dG9uIGJ1dHRvbicpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGZldGNoKGl0ZW0uZGF0YXNldC5wcmVmaXggKyAnL19sb2tpL3Byb21wdC8nICsgaXRlbS5kYXRhc2V0LmlkICsgJy8nICsgaXRlbS5kYXRhc2V0LmZpZWxkICsgJy8nICsgaXRlbS5kYXRhc2V0Lm9iamVjdElkKS50aGVuKHIgPT4gci5qc29uKCkpLnRoZW4ociA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHIucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBpbnB1dCA9IGl0ZW0uY2xvc2VzdCgnLndpZGdldCcpLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W2lkXScpO1xuICAgICAgICAgICAgICAgICAgICBsZXQgdGV4dGFyZWEgPSBpdGVtLmNsb3Nlc3QoJy53aWRnZXQnKS5xdWVyeVNlbGVjdG9yKCd0ZXh0YXJlYVtpZF0nKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHNlbGVjdCA9IGl0ZW0uY2xvc2VzdCgnLndpZGdldCcpLnF1ZXJ5U2VsZWN0b3IoJ3NlbGVjdFtpZF0nKTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoaW5wdXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LnZhbHVlID0gci5yZXN1bHQ7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodGV4dGFyZWEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRhcmVhLmlubmVyVGV4dCA9IHIucmVzdWx0O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGlueW1jZSAmJiB0aW55bWNlLmdldCh0ZXh0YXJlYS5pZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW55bWNlLmdldCh0ZXh0YXJlYS5pZCkuc2V0Q29udGVudChyLnJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3QucXVlcnlTZWxlY3RvckFsbCgnb3B0aW9uW3NlbGVjdGVkXScpLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnNlbGVjdGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgb3B0aW9uID0gc2VsZWN0LnF1ZXJ5U2VsZWN0b3IoJ29wdGlvblt2YWx1ZT1cIicgKyByLnJlc3VsdCArICdcIl0nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbi5zZWxlY3RlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3QuY2xhc3NMaXN0LmNvbnRhaW5zKCd0bF9jaG9zZW4nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaW5wdXQnLCB7IGJ1YmJsZXM6IHRydWUgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNob3NlbkNvbnRhaW5lciA9IHNlbGVjdC5wYXJlbnRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaHpuLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaG9zZW5Db250YWluZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hvc2VuQ29udGFpbmVyLnJlbW92ZSgpOyAvLyBSZW1vdmUgQ2hvc2VuJ3MgVUlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3IENob3NlbihzZWxlY3QpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSlcbn0pIl0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiaXRlbSIsImZldGNoIiwiZGF0YXNldCIsInByZWZpeCIsImlkIiwiZmllbGQiLCJvYmplY3RJZCIsInRoZW4iLCJyIiwianNvbiIsInJlc3VsdCIsImlucHV0IiwiY2xvc2VzdCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0YXJlYSIsInNlbGVjdCIsInZhbHVlIiwiaW5uZXJUZXh0IiwidGlueW1jZSIsImdldCIsInNldENvbnRlbnQiLCJzZWxlY3RlZCIsIm9wdGlvbiIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiZGlzcGF0Y2hFdmVudCIsIkV2ZW50IiwiYnViYmxlcyIsImNob3NlbkNvbnRhaW5lciIsInBhcmVudEVsZW1lbnQiLCJyZW1vdmUiLCJDaG9zZW4iXSwic291cmNlUm9vdCI6IiJ9